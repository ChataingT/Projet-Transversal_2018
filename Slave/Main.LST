C51 COMPILER V9.52.0.0   MAIN                                                              05/16/2018 11:56:16 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN Main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE Main.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <c8051f020.h>
   2          #include <intrins.h>
   3          #include <string.h>
   4          #include <stdio.h>
   5          
   6          #include "Declarations_GPIO.h"
   7          #include "Config_Globale.h"
   8          #include "Timers.h"
   9          #include "Servomoteur_Vertical.h"
  10          #include "Config_SPI.h"
  11          #include "Transmission_SPI.h"
  12          #include "Transmission_UART0.h"
  13          #include "Config_UART0.h"
  14          #include "Config_UART1.h"
  15          
  16          
  17          #define SYSCLK 22118400L
  18          
  19          int Dest_msg_SPI[5] = 0;
  20          unsigned char Angle_atteint;
  21          int w,j;
  22          
  23          //Variables globales
  24          extern unsigned char msg_CM4[256];
  25          extern unsigned char msg_PointLum[256];
  26          extern unsigned char msg_ServVert[256];
  27          extern unsigned char msg_Vue[256];
  28          extern unsigned char msg_FPGA[256];
  29          int a;
  30          
  31          
  32          void main (void) {
  33   1        
  34   1        EA=0;
  35   1        Init_Device();  //Initialisation du microcontrôleur
  36   1        Config_Timer2();
  37   1        Config_SPI_SLAVE();
  38   1        Config_Clock_UART1();
  39   1        Config_Clock_UART0();
  40   1        Config_UART0();
  41   1        Config_UART1();
  42   1        EA=1;
  43   1      
  44   1      /*Fonctions de tests de la connexion SPI
  45   1        trame_recue_test(0xD1);
  46   1        trame_recue_test(0xD1);
  47   1        trame_recue_test(0x01);
  48   1        trame_recue_test(0x05);
  49   1        trame_recue_test(0x32);
  50   1        trame_recue_test(0x19);
  51   1        trame_recue_test(0xFF);
  52   1        trame_recue_test(0xFF);*/
  53   1        
  54   1        
  55   1        
C51 COMPILER V9.52.0.0   MAIN                                                              05/16/2018 11:56:16 PAGE 2   

  56   1        while (1){
  57   2          for(w=0; w<sizeof(Dest_msg_SPI);w++){
  58   3            if(Dest_msg_SPI[w] == 1)
  59   3              break;
  60   3          }
  61   2          switch(w){
  62   3            case 0 : 
  63   3              UART_CortexM4(msg_CM4); //On appelle sa fonction associée en lui envoyant son message
  64   3              trame_emise(0xEE);
  65   3              for(j=0 ; j<255 ; msg_CM4[j++]=0); // RAZ du message
  66   3              Dest_msg_SPI[w] = 0;
  67   3              break;
  68   3            case 1 : 
  69   3              for(j=0 ; j<255 ; msg_PointLum[j++]=0);
  70   3              Dest_msg_SPI[w] = 0;
  71   3              break;
  72   3            case 2 : 
  73   3              Angle_atteint = CDE_Servo_V(msg_ServVert[0]); //On appelle sa fonction associée en lui envoyant son m
             -essage
  74   3              trame_emise(Angle_atteint);
  75   3              for(j=0 ; j<255 ; msg_ServVert[j++]=0); // RAZ du message
  76   3              Dest_msg_SPI[w] = 0;
  77   3              break;
  78   3            case 3 : 
  79   3              for(j=0 ; j<255 ; msg_Vue[j++]=0);
  80   3              Dest_msg_SPI[w] = 0;
  81   3              break;
  82   3            case 4 : 
  83   3              for(j=0 ; j<255 ; msg_FPGA[j++]=0);
  84   3              Dest_msg_SPI[w] = 0;
  85   3              break;
  86   3            default : 
  87   3              break;
  88   3          }
  89   2      
  90   2        }
  91   1      
  92   1      }
  93          
  94          
  95          void ISR_Timer2 (void) interrupt 5 {
  96   1        TF2 = 0; //Remise à '0' du flag d'overflow
  97   1        PWM_servo=!PWM_servo; //On envoie le signal PWM au servomoteur
  98   1      }
  99          
 100          
 101          
 102          
 103          void ISR_SPI (void) interrupt 6 {
 104   1      
 105   1          SPIF = 0; //RAZ du flag d'écriture
 106   1          
 107   1          trame_recue(); // On réceptionne le message du Master
 108   1          trame_emise(0xEE); // On renvoie un message au Master pour lui accuser bonne réception
 109   1      
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    531    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17    ----
C51 COMPILER V9.52.0.0   MAIN                                                              05/16/2018 11:56:16 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
