C51 COMPILER V9.52.0.0   ADC                                                               05/15/2018 17:33:25 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN ADC.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ADC.c LARGE BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include <c8051f020.h>
   2          #include <intrins.h>
   3          
   4          #include "ADC.h"
   5          
   6          #define SYSCLK 22118400L
   7          
   8          
   9          void CFG_VREF(void){
  10   1        REF0CN |= 0x03; //On active la source de tension de référence interne sur le pin VREF0
  11   1      }
  12          
  13          void CFG_ADC0(void){
  14   1        
  15   1        AD0EN = 0; // Désactivation de l'ADC0 
  16   1      
  17   1        AMX0CF &= 0x00; //Configuration uniopolaire sur AIN0
  18   1        AMX0SL |= 0x00; //Conversion sur la voie AINO.3
  19   1        ADC0CF = 0x50; //Clock du convertisseur de 2,5 MHz
  20   1        ADC0CF |= 0x00; //Gain de 1
  21   1        
  22   1        AD0INT = 0; //On efface le drapeau signalant la fin de la conversion
  23   1        
  24   1        //La conversion sera déclanchée par une mise à '1' de AD0BUSY
  25   1        AD0CM1 = 0;
  26   1        AD0CM0 = 0;
  27   1        
  28   1        AD0LJST = 1; //Remplissage de AD0 à gauche
  29   1        
  30   1        AD0EN = 1; //Activation de l'ADC0
  31   1      }
  32          
  33          
  34          unsigned char ACQ_ADC(void){
  35   1        AD0INT = 0;//On remet à '0' le drapeau signalant la fin de la conversion
  36   1        AD0BUSY = 1; //On déclanche la conversion à l'aide de ce drapeau - il est automatiquement remis à '0' 
             -à la fin
  37   1        while(!AD0INT); //On attend la fin de la conversion à l'aide du flag AD0INT
  38   1        return ADC0H; // On retourne le résulat qui est sur 12 bits
  39   1      }
  40          
  41          int Courant_ADC(void){
  42   1        // Au préalable, on envoie la tension de sortie de l'AO sur l'entrée AINO.0 (Broche A31 du 8051F020)
  43   1        //Cette tension doit être inférieure à 3.3V, il faut donc faire attention au gain de l'AO.
  44   1        float tension_AO;
  45   1        int courant;
  46   1        int gain_AO = 190;
  47   1        float R_SHUNT = 50*0.001;
  48   1      
  49   1        tension_AO = (ACQ_ADC()*3.3)/0xFF; // On appelle la fonction ACQ_ADC() pour récupérer la conversion (Te
             -nsion en V)
  50   1        courant = (int) (6*tension_AO*1000)/(gain_AO*R_SHUNT); //Valeur du courant en mA
  51   1      
  52   1        return courant;
  53   1      }
C51 COMPILER V9.52.0.0   ADC                                                               05/15/2018 17:33:25 PAGE 2   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    182    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
